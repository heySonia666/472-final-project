print(ggplot(gender_prop, aes(x = gender, y = Proportion, fill = Group)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Gender Preference in Question Asking", x = 'Gender', y = 'Proportion', fill = 'Group') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0, vjust = 0.5),  # Ensure x-axis labels are straight
plot.title = element_text(hjust = 0.5))) # Center the title
library(ggplot2)
library(dplyr)
# Combine the data frames first
combined_df <- bind_rows(
emembers_df %>% mutate(Group = 'emembers'),
hmembers_df %>% mutate(Group = 'hmembers')
)
# Calculate the party proportions
party_prop <- combined_df %>%
count(Party, Group) %>%
group_by(Party) %>%
mutate(Proportion = n / sum(n)) %>%
ungroup()
# Ensure Party is treated as a factor
party_prop$Party <- as.factor(party_prop$Party)
# Plotting the data with a centered title
ggplot(party_prop, aes(x = Party, y = Proportion, fill = Group)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Party Preference in Question Asking", x = 'Party', y = 'Proportion', fill = 'Group') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5),  # Rotate x-axis labels for Party
plot.title = element_text(hjust = 0.5)) # Center the title
# Display the plot
print(ggplot(party_prop, aes(x = Party, y = Proportion, fill = Group)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Party Preference in Question Asking", x = 'Party', y = 'Proportion', fill = 'Group') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5),  # Rotate x-axis labels for Party
plot.title = element_text(hjust = 0.5))) # Center the title
library(ggplot2)
library(dplyr)
library(lubridate)
# Convert membershipStartDate to Date format
emembers_df$membershipStartDate <- as.Date(emembers_df$membershipStartDate)
hmembers_df$membershipStartDate <- as.Date(hmembers_df$membershipStartDate)
# Extract the year from the membershipStartDate
emembers_df$Year <- year(emembers_df$membershipStartDate)
hmembers_df$Year <- year(hmembers_df$membershipStartDate)
# Combine the data frames
combined_df <- bind_rows(
emembers_df %>% mutate(Group = 'emembers'),
hmembers_df %>% mutate(Group = 'hmembers')
)
# Calculate the counts for each year and group
yearly_counts <- combined_df %>%
group_by(Year, Group) %>%
summarise(n = n(), .groups = 'drop')
# Calculate proportions for each year
yearly_counts <- yearly_counts %>%
group_by(Year) %>%
mutate(Proportion = n / sum(n)) %>%
ungroup()
# Plotting the data with an annotation for the year 2016 at the bottom on the x-axis
line_plot <- ggplot(yearly_counts, aes(x = Year, y = Proportion, group = Group, color = Group)) +
geom_line() +
geom_point() + # Add points to the line graph
geom_vline(xintercept = 2016, linetype = "dashed", color = "black") +
annotate("text", x = 2016, y = 0, label = "2016", vjust = 1, color = "black", angle = 0) +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = 'Year', y = 'Proportion of Members', color = 'Group') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) # Tilt the x-axis labels
# Display the plot
print(line_plot)
library(ggplot2)
library(dplyr)
library(lubridate)
# Assume emembers_df and hmembers_df are already loaded and have the appropriate columns
# Function to classify dates into two periods
classify_period <- function(date) {
if (year(date) < 2016) {
'Before 2016'
} else {
'After 2016'
}
}
# Convert membershipStartDate to Date and classify periods
emembers_df$membershipStartDate <- as.Date(emembers_df$membershipStartDate)
hmembers_df$membershipStartDate <- as.Date(hmembers_df$membershipStartDate)
emembers_df$Period <- sapply(emembers_df$membershipStartDate, classify_period)
hmembers_df$Period <- sapply(hmembers_df$membershipStartDate, classify_period)
# Filter for female members after 2016 and ensure Party is treated as a factor
emembers_female <- emembers_df %>% filter(gender == "F" & Period == 'After 2016') %>% mutate(Party = as.factor(Party))
hmembers_female <- hmembers_df %>% filter(gender == "F" & Period == 'After 2016') %>% mutate(Party = as.factor(Party))
# Count by Party for emembers and hmembers
emembers_female_counts <- emembers_female %>% count(Party)
hmembers_female_counts <- hmembers_female %>% count(Party)
# Combine the counts and calculate proportions
combined_female_counts <- full_join(emembers_female_counts, hmembers_female_counts, by = "Party", suffix = c("_emembers", "_hmembers")) %>%
mutate(Party = as.factor(Party),
emembers = n_emembers / (n_emembers + n_hmembers),
hmembers = n_hmembers / (n_emembers + n_hmembers))
# Melt the combined data for plotting with ggplot2
combined_female_melted <- reshape2::melt(combined_female_counts, id.vars = "Party", measure.vars = c("emembers", "hmembers"))
# Plot the data for females
female_plot <- ggplot(combined_female_melted, aes(x = Party, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = 'Party', y = 'Proportion', fill = 'Group',title = 'Female Members Proportion After 2016') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 10))
# Execute the plot for females
print(female_plot)
# Filter for male members after 2016 and ensure Party is treated as a factor
emembers_male <- emembers_df %>% filter(gender == "M" & Period == 'After 2016') %>% mutate(Party = as.factor(Party))
hmembers_male <- hmembers_df %>% filter(gender == "M" & Period == 'After 2016') %>% mutate(Party = as.factor(Party))
# Count by Party for emembers and hmembers
emembers_male_counts <- emembers_male %>% count(Party)
hmembers_male_counts <- hmembers_male %>% count(Party)
# Combine the counts and calculate proportions
combined_male_counts <- full_join(emembers_male_counts, hmembers_male_counts, by = "Party", suffix = c("_emembers", "_hmembers")) %>%
mutate(Party = as.factor(Party),
emembers = n_emembers / (n_emembers + n_hmembers),
hmembers = n_hmembers / (n_emembers + n_hmembers))
# Melt the combined data for plotting with ggplot2
combined_male_melted <- reshape2::melt(combined_male_counts, id.vars = "Party", measure.vars = c("emembers", "hmembers"))
# Plot the data for males
male_plot <- ggplot(combined_male_melted, aes(x = Party, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = 'Party', y = 'Proportion', fill = 'Group',title = 'Male Members Proportion After 2016') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 10))
# Execute the plot for males
print(male_plot)
# Filter for female members before 2016 and ensure Party is treated as a factor
emembers_female_before <- emembers_df %>% filter(gender == "F" & Period == 'Before 2016') %>% mutate(Party = as.factor(Party))
hmembers_female_before <- hmembers_df %>% filter(gender == "F" & Period == 'Before 2016') %>% mutate(Party = as.factor(Party))
# Count by Party for emembers and hmembers
emembers_female_counts_before <- emembers_female_before %>% count(Party)
hmembers_female_counts_before <- hmembers_female_before %>% count(Party)
# Combine the counts and calculate proportions
combined_female_counts_before <- full_join(emembers_female_counts_before, hmembers_female_counts_before, by = "Party", suffix = c("_emembers", "_hmembers")) %>%
mutate(Party = as.factor(Party),
emembers = n_emembers / (n_emembers + n_hmembers),
hmembers = n_hmembers / (n_emembers + n_hmembers))
# Melt the combined data for plotting with ggplot2
combined_female_melted_before <- reshape2::melt(combined_female_counts_before, id.vars = "Party", measure.vars = c("emembers", "hmembers"))
# Plot the data for females before 2016
female_plot_before <- ggplot(combined_female_melted_before, aes(x = Party, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = 'Party', y = 'Proportion', fill = 'Group', title = 'Female Members Proportion Before 2016') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 10))
# Execute the plot for females before 2016
print(female_plot_before)
# Filter for male members before 2016 and ensure Party is treated as a factor
emembers_male_before <- emembers_df %>% filter(gender == "M" & Period == 'Before 2016') %>% mutate(Party = as.factor(Party))
hmembers_male_before <- hmembers_df %>% filter(gender == "M" & Period == 'Before 2016') %>% mutate(Party = as.factor(Party))
# Count by Party for emembers and hmembers
emembers_male_counts_before <- emembers_male_before %>% count(Party)
hmembers_male_counts_before <- hmembers_male_before %>% count(Party)
# Combine the counts and calculate proportions
combined_male_counts_before <- full_join(emembers_male_counts_before, hmembers_male_counts_before, by = "Party", suffix = c("_emembers", "_hmembers")) %>%
mutate(Party = as.factor(Party),
emembers = n_emembers / (n_emembers + n_hmembers),
hmembers = n_hmembers / (n_emembers + n_hmembers))
# Melt the combined data for plotting with ggplot2
combined_male_melted_before <- reshape2::melt(combined_male_counts_before, id.vars = "Party", measure.vars = c("emembers", "hmembers"))
# Plot the data for males before 2016
male_plot_before <- ggplot(combined_male_melted_before, aes(x = Party, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = 'Party', y = 'Proportion', fill = 'Group', title = 'Male Members Proportion Before 2016') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 10))
# Execute the plot for males before 2016
print(male_plot_before)
library(patchwork)
# Combine plots
combined_plot <- (female_plot | male_plot) /
(female_plot_before | male_plot_before)
# show the combined plot
combined_plot
library(ggplot2)
library(dplyr)
# Assuming emembers_df and hmembers_df are your data frames and they have been read correctly.
# Combine the data frames first
combined_df <- bind_rows(
emembers_df %>% mutate(Group = 'emembers'),
hmembers_df %>% mutate(Group = 'hmembers')
)
# Calculate the gender proportions
gender_prop <- combined_df %>%
count(gender, Group) %>%
group_by(gender) %>%
mutate(Proportion = n / sum(n)) %>%
ungroup()
# Plotting the data with a centered title
ggplot(gender_prop, aes(x = gender, y = Proportion, fill = Group)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Gender Preference in Question Asking", x = 'Gender', y = 'Proportion', fill = 'Group') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0, vjust = 0.5),  # Ensure x-axis labels are straight
plot.title = element_text(hjust = 0.5)) # Center the title
library(ggplot2)
library(dplyr)
# Assuming emembers_df and hmembers_df are your data frames and they have been read correctly.
# Combine the data frames first
combined_df <- bind_rows(
emembers_df %>% mutate(Group = 'emembers'),
hmembers_df %>% mutate(Group = 'hmembers')
)
# Calculate the gender proportions
gender_prop <- combined_df %>%
count(gender, Group) %>%
group_by(gender) %>%
mutate(Proportion = n / sum(n)) %>%
ungroup()
# Plotting the data with a centered title
ggplot(gender_prop, aes(x = gender, y = Proportion, fill = Group)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Gender Preference in Question Asking", x = 'Gender', y = 'Proportion', fill = 'Group') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 0, vjust = 0.5),  # Ensure x-axis labels are straight
plot.title = element_text(hjust = 0.5)) # Center the title
print(ggplot)
library(ggplot2)
library(dplyr)
# Combine the data frames first
combined_df <- bind_rows(
emembers_df %>% mutate(Group = 'emembers'),
hmembers_df %>% mutate(Group = 'hmembers')
)
# Calculate the party proportions
party_prop <- combined_df %>%
count(Party, Group) %>%
group_by(Party) %>%
mutate(Proportion = n / sum(n)) %>%
ungroup()
# Ensure Party is treated as a factor
party_prop$Party <- as.factor(party_prop$Party)
# Plotting the data with a centered title
ggplot(party_prop, aes(x = Party, y = Proportion, fill = Group)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Party Preference in Question Asking", x = 'Party', y = 'Proportion', fill = 'Group') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5),  # Rotate x-axis labels for Party
plot.title = element_text(hjust = 0.5)) # Center the title
library(ggplot2)
library(dplyr)
library(lubridate)
# Assume emembers_df and hmembers_df are already loaded and have the appropriate columns
# Function to classify dates into two periods
classify_period <- function(date) {
if (year(date) < 2016) {
'Before 2016'
} else {
'After 2016'
}
}
# Convert membershipStartDate to Date and classify periods
emembers_df$membershipStartDate <- as.Date(emembers_df$membershipStartDate)
hmembers_df$membershipStartDate <- as.Date(hmembers_df$membershipStartDate)
emembers_df$Period <- sapply(emembers_df$membershipStartDate, classify_period)
hmembers_df$Period <- sapply(hmembers_df$membershipStartDate, classify_period)
# Filter for female members after 2016 and ensure Party is treated as a factor
emembers_female <- emembers_df %>% filter(gender == "F" & Period == 'After 2016') %>% mutate(Party = as.factor(Party))
hmembers_female <- hmembers_df %>% filter(gender == "F" & Period == 'After 2016') %>% mutate(Party = as.factor(Party))
# Count by Party for emembers and hmembers
emembers_female_counts <- emembers_female %>% count(Party)
hmembers_female_counts <- hmembers_female %>% count(Party)
# Combine the counts and calculate proportions
combined_female_counts <- full_join(emembers_female_counts, hmembers_female_counts, by = "Party", suffix = c("_emembers", "_hmembers")) %>%
mutate(Party = as.factor(Party),
emembers = n_emembers / (n_emembers + n_hmembers),
hmembers = n_hmembers / (n_emembers + n_hmembers))
# Melt the combined data for plotting with ggplot2
combined_female_melted <- reshape2::melt(combined_female_counts, id.vars = "Party", measure.vars = c("emembers", "hmembers"))
# Plot the data for females
female_plot <- ggplot(combined_female_melted, aes(x = Party, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = 'Party', y = 'Proportion', fill = 'Group',title = 'Female Members Proportion After 2016') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 10))
# Filter for male members after 2016 and ensure Party is treated as a factor
emembers_male <- emembers_df %>% filter(gender == "M" & Period == 'After 2016') %>% mutate(Party = as.factor(Party))
hmembers_male <- hmembers_df %>% filter(gender == "M" & Period == 'After 2016') %>% mutate(Party = as.factor(Party))
# Count by Party for emembers and hmembers
emembers_male_counts <- emembers_male %>% count(Party)
hmembers_male_counts <- hmembers_male %>% count(Party)
# Combine the counts and calculate proportions
combined_male_counts <- full_join(emembers_male_counts, hmembers_male_counts, by = "Party", suffix = c("_emembers", "_hmembers")) %>%
mutate(Party = as.factor(Party),
emembers = n_emembers / (n_emembers + n_hmembers),
hmembers = n_hmembers / (n_emembers + n_hmembers))
# Melt the combined data for plotting with ggplot2
combined_male_melted <- reshape2::melt(combined_male_counts, id.vars = "Party", measure.vars = c("emembers", "hmembers"))
# Plot the data for males
male_plot <- ggplot(combined_male_melted, aes(x = Party, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = 'Party', y = 'Proportion', fill = 'Group',title = 'Male Members Proportion After 2016') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 10))
# Execute the plot for males
print(male_plot)
# Filter for female members before 2016 and ensure Party is treated as a factor
emembers_female_before <- emembers_df %>% filter(gender == "F" & Period == 'Before 2016') %>% mutate(Party = as.factor(Party))
hmembers_female_before <- hmembers_df %>% filter(gender == "F" & Period == 'Before 2016') %>% mutate(Party = as.factor(Party))
# Count by Party for emembers and hmembers
emembers_female_counts_before <- emembers_female_before %>% count(Party)
hmembers_female_counts_before <- hmembers_female_before %>% count(Party)
# Combine the counts and calculate proportions
combined_female_counts_before <- full_join(emembers_female_counts_before, hmembers_female_counts_before, by = "Party", suffix = c("_emembers", "_hmembers")) %>%
mutate(Party = as.factor(Party),
emembers = n_emembers / (n_emembers + n_hmembers),
hmembers = n_hmembers / (n_emembers + n_hmembers))
# Melt the combined data for plotting with ggplot2
combined_female_melted_before <- reshape2::melt(combined_female_counts_before, id.vars = "Party", measure.vars = c("emembers", "hmembers"))
# Plot the data for females before 2016
female_plot_before <- ggplot(combined_female_melted_before, aes(x = Party, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = 'Party', y = 'Proportion', fill = 'Group', title = 'Female Members Proportion Before 2016') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 10))
# Execute the plot for females before 2016
print(female_plot_before)
# Filter for male members before 2016 and ensure Party is treated as a factor
emembers_male_before <- emembers_df %>% filter(gender == "M" & Period == 'Before 2016') %>% mutate(Party = as.factor(Party))
hmembers_male_before <- hmembers_df %>% filter(gender == "M" & Period == 'Before 2016') %>% mutate(Party = as.factor(Party))
# Count by Party for emembers and hmembers
emembers_male_counts_before <- emembers_male_before %>% count(Party)
hmembers_male_counts_before <- hmembers_male_before %>% count(Party)
# Combine the counts and calculate proportions
combined_male_counts_before <- full_join(emembers_male_counts_before, hmembers_male_counts_before, by = "Party", suffix = c("_emembers", "_hmembers")) %>%
mutate(Party = as.factor(Party),
emembers = n_emembers / (n_emembers + n_hmembers),
hmembers = n_hmembers / (n_emembers + n_hmembers))
# Melt the combined data for plotting with ggplot2
combined_male_melted_before <- reshape2::melt(combined_male_counts_before, id.vars = "Party", measure.vars = c("emembers", "hmembers"))
# Plot the data for males before 2016
male_plot_before <- ggplot(combined_male_melted_before, aes(x = Party, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = 'Party', y = 'Proportion', fill = 'Group', title = 'Male Members Proportion Before 2016') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 10))
# Execute the plot for males before 2016
print(male_plot_before)
library(patchwork)
# Combine plots
combined_plot <- (female_plot | male_plot) /
(female_plot_before | male_plot_before)
# show the combined plot
combined_plot
library(ggplot2)
library(dplyr)
library(lubridate)
# Assume emembers_df and hmembers_df are already loaded and have the appropriate columns
# Function to classify dates into two periods
classify_period <- function(date) {
if (year(date) < 2016) {
'Before 2016'
} else {
'After 2016'
}
}
# Convert membershipStartDate to Date and classify periods
emembers_df$membershipStartDate <- as.Date(emembers_df$membershipStartDate)
hmembers_df$membershipStartDate <- as.Date(hmembers_df$membershipStartDate)
emembers_df$Period <- sapply(emembers_df$membershipStartDate, classify_period)
hmembers_df$Period <- sapply(hmembers_df$membershipStartDate, classify_period)
# Filter for female members after 2016 and ensure Party is treated as a factor
emembers_female <- emembers_df %>% filter(gender == "F" & Period == 'After 2016') %>% mutate(Party = as.factor(Party))
hmembers_female <- hmembers_df %>% filter(gender == "F" & Period == 'After 2016') %>% mutate(Party = as.factor(Party))
# Count by Party for emembers and hmembers
emembers_female_counts <- emembers_female %>% count(Party)
hmembers_female_counts <- hmembers_female %>% count(Party)
# Combine the counts and calculate proportions
combined_female_counts <- full_join(emembers_female_counts, hmembers_female_counts, by = "Party", suffix = c("_emembers", "_hmembers")) %>%
mutate(Party = as.factor(Party),
emembers = n_emembers / (n_emembers + n_hmembers),
hmembers = n_hmembers / (n_emembers + n_hmembers))
# Melt the combined data for plotting with ggplot2
combined_female_melted <- reshape2::melt(combined_female_counts, id.vars = "Party", measure.vars = c("emembers", "hmembers"))
# Plot the data for females
female_plot <- ggplot(combined_female_melted, aes(x = Party, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = 'Party', y = 'Proportion', fill = 'Group',title = 'Female Members Proportion After 2016') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 10))
# Filter for male members after 2016 and ensure Party is treated as a factor
emembers_male <- emembers_df %>% filter(gender == "M" & Period == 'After 2016') %>% mutate(Party = as.factor(Party))
hmembers_male <- hmembers_df %>% filter(gender == "M" & Period == 'After 2016') %>% mutate(Party = as.factor(Party))
# Count by Party for emembers and hmembers
emembers_male_counts <- emembers_male %>% count(Party)
hmembers_male_counts <- hmembers_male %>% count(Party)
# Combine the counts and calculate proportions
combined_male_counts <- full_join(emembers_male_counts, hmembers_male_counts, by = "Party", suffix = c("_emembers", "_hmembers")) %>%
mutate(Party = as.factor(Party),
emembers = n_emembers / (n_emembers + n_hmembers),
hmembers = n_hmembers / (n_emembers + n_hmembers))
# Melt the combined data for plotting with ggplot2
combined_male_melted <- reshape2::melt(combined_male_counts, id.vars = "Party", measure.vars = c("emembers", "hmembers"))
# Plot the data for males
male_plot <- ggplot(combined_male_melted, aes(x = Party, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = 'Party', y = 'Proportion', fill = 'Group',title = 'Male Members Proportion After 2016') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 10))
# Filter for female members before 2016 and ensure Party is treated as a factor
emembers_female_before <- emembers_df %>% filter(gender == "F" & Period == 'Before 2016') %>% mutate(Party = as.factor(Party))
hmembers_female_before <- hmembers_df %>% filter(gender == "F" & Period == 'Before 2016') %>% mutate(Party = as.factor(Party))
# Count by Party for emembers and hmembers
emembers_female_counts_before <- emembers_female_before %>% count(Party)
hmembers_female_counts_before <- hmembers_female_before %>% count(Party)
# Combine the counts and calculate proportions
combined_female_counts_before <- full_join(emembers_female_counts_before, hmembers_female_counts_before, by = "Party", suffix = c("_emembers", "_hmembers")) %>%
mutate(Party = as.factor(Party),
emembers = n_emembers / (n_emembers + n_hmembers),
hmembers = n_hmembers / (n_emembers + n_hmembers))
# Melt the combined data for plotting with ggplot2
combined_female_melted_before <- reshape2::melt(combined_female_counts_before, id.vars = "Party", measure.vars = c("emembers", "hmembers"))
# Plot the data for females before 2016
female_plot_before <- ggplot(combined_female_melted_before, aes(x = Party, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = 'Party', y = 'Proportion', fill = 'Group', title = 'Female Members Proportion Before 2016') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 10))
# Filter for male members before 2016 and ensure Party is treated as a factor
emembers_male_before <- emembers_df %>% filter(gender == "M" & Period == 'Before 2016') %>% mutate(Party = as.factor(Party))
hmembers_male_before <- hmembers_df %>% filter(gender == "M" & Period == 'Before 2016') %>% mutate(Party = as.factor(Party))
# Count by Party for emembers and hmembers
emembers_male_counts_before <- emembers_male_before %>% count(Party)
hmembers_male_counts_before <- hmembers_male_before %>% count(Party)
# Combine the counts and calculate proportions
combined_male_counts_before <- full_join(emembers_male_counts_before, hmembers_male_counts_before, by = "Party", suffix = c("_emembers", "_hmembers")) %>%
mutate(Party = as.factor(Party),
emembers = n_emembers / (n_emembers + n_hmembers),
hmembers = n_hmembers / (n_emembers + n_hmembers))
# Melt the combined data for plotting with ggplot2
combined_male_melted_before <- reshape2::melt(combined_male_counts_before, id.vars = "Party", measure.vars = c("emembers", "hmembers"))
# Plot the data for males before 2016
male_plot_before <- ggplot(combined_male_melted_before, aes(x = Party, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = 'Party', y = 'Proportion', fill = 'Group', title = 'Male Members Proportion Before 2016') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 10))
library(patchwork)
# Combine plots
combined_plot <- (female_plot | male_plot) /
(female_plot_before | male_plot_before)
# show the combined plot
combined_plot
library(ggplot2)
library(dplyr)
library(lubridate)
# Convert membershipStartDate to Date format
emembers_df$membershipStartDate <- as.Date(emembers_df$membershipStartDate)
hmembers_df$membershipStartDate <- as.Date(hmembers_df$membershipStartDate)
# Extract the year from the membershipStartDate
emembers_df$Year <- year(emembers_df$membershipStartDate)
hmembers_df$Year <- year(hmembers_df$membershipStartDate)
# Combine the data frames
combined_df <- bind_rows(
emembers_df %>% mutate(Group = 'emembers'),
hmembers_df %>% mutate(Group = 'hmembers')
)
# Calculate the counts for each year and group
yearly_counts <- combined_df %>%
group_by(Year, Group) %>%
summarise(n = n(), .groups = 'drop')
# Calculate proportions for each year
yearly_counts <- yearly_counts %>%
group_by(Year) %>%
mutate(Proportion = n / sum(n)) %>%
ungroup()
# Plotting the data with a centered title
line_plot <- ggplot(yearly_counts, aes(x = Year, y = Proportion, group = Group, color = Group)) +
geom_line() +
geom_point() + # Add points to the line graph
geom_vline(xintercept = 2016, linetype = "dashed", color = "black") +
annotate("text", x = 2016, y = 0, label = "2016", vjust = 1, color = "black", angle = 0) +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Time Period in Question Asking", x = 'Year', y = 'Proportion of Members', color = 'Group') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),  # Tilt the x-axis labels
plot.title = element_text(hjust = 0.5)) # Center the title
# Display the plot
print(line_plot)
